#OAuth Packager:
#  desc: In this case, the OAuth parameters are checked from AFKLM internal administration.
#
#  use cases:
#    - Check required grant type specified at desired level (package, plan, or application) for accessing this endpoint;
#    - Check the HTTP verb for the specified endpoint.
#
service id: aServiceId
endpoint id: anEndpointId
endpoint name: unit-test-endpoint

endpoint uri: https://api.airfranceklm.com/externallyHostedAPI
origin uri: https://some.externally.hostted.backend.com/backend


pre-processor configuration:
  synchronicity: request-response
  elements: httpVerb,grantType,messageId,packageKey

---
name: access is granted
desc: The sidecar is able to obtain the necessary authentication, and is passing this to Mashery gateway for applcation.

point: PreProcessor

api client request:
  remote address: 127.0.0.1
  http verb: GET
  resource: /fff
  query params:
    myQuery: 123

  application:
    name: the-app
    package key:
      key: dfgf

  authorization context:
    scope: "role1 role2 role2"
    user context: '{"level-of-assurance": 4, "name": "john", lastName: "doe"}'
    grant type: client_credentials
    expires: "2020-03-24T13:48:09Z"

sidecar pre-processor:
  input:
    masheryMessageId: unit-test-call-uuid
    synchronicity: RequestResponse
    point: PreProcessor
    packageKey: dfgf
    serviceId: aServiceId
    endpointId: anEndpointId
    operation:
      httpVerb: get
    token:
      grantType: client_credentials

  output:
      # Do-nothing, empty object is produced.
---
name: invocation fails
desc: The sidecar is able to obtain the necessary authentication, and is passing this to Mashery gateway for applcation.

point: PreProcessor

inherited:
  - client-request
  - sidecar pre-processor request


sidecar pre-processor:
  throw exception: Unexpected coded 500 encountered

mashery response:
  complete: true
  status code: 550
  headers:
    Content-Type: application/xml
  payload: "<h1><![CDATA[Internal server error before processing the call, code 0x000003BB]]></h1>"

---
name: access is granted with extra headers
desc: The sidecar grants access; however it also flags how the request should be handled by passing the
         additional headers in the response. Here the intention is that the back-end can only modify PNR, last name,
         or email from the information passed. A comprehensive log of the action MUST be sent by the back-end to
         the security administration department.

point: PreProcessor

inherited:
  - client-request

api client request:
  http verb: PUT

sidecar pre-processor:
  input:
    masheryMessageId: unit-test-call-uuid
    synchronicity: RequestResponse
    point: PreProcessor
    packageKey: dfgf
    serviceId: aServiceId
    endpointId: anEndpointId
    operation:
      httpVerb: put
    token:
      grantType: client_credentials

  output:
    modify:
      passHeaders:
        x-afklm-allow: PNR,LastName,Email
        x-afklm-security-logging: FULL

# This is what needs to be changed
request to the api origin:
  modify origin request:
    add headers:
      x-afklm-allow: PNR,LastName,Email
      x-afklm-security-logging: FULL

---

name: access is denied
desc: The sidecar denies POST method to the use as this method is not supported in the administration.

point: PreProcessor

inherited:
  - client-request

api client request:
  http verb: POST
  payload: == Sample Payload ==

sidecar pre-processor:
  input:
    masheryMessageId: unit-test-call-uuid
    synchronicity: RequestResponse
    point: PreProcessor
    packageKey: dfgf
    serviceId: aServiceId
    endpointId: anEndpointId
    operation:
      httpVerb: post
    token:
      grantType: client_credentials

  output:
    terminate:
      statusCode: 443
      message: Operation not permitted for your plan

mashery response:
  complete: true
  status code: 443
  headers:
    Content-Type: application/xml
  payload: "<h1><![CDATA[Operation not permitted for your plan]]></h1>"

