Dynamic endpoint authorization:
  desc: In this case, the sidecar is used to compute dynamic set of headers that need to be added to the API
    origin request so that the request would succeed.

  use cases:
    - Supply dynamic back-end authentication required by the API origin server;
    - Supplement headers indicating application authorization for the data that the API origin server must observe.

  endpoint:
    service id: aServiceId
    endpoint id: anEndpointId
    endpoint name: unit-test-endpoint

    pre-processor configuration:
      synchronicity: request-response
      # For the purpose of testing, the details of the actual stack (aws-lambda) will be omitted.

  cases:

    # There are three cases here:
    # 1. Authentication succeeds;
    # 2. Authentication is rejected by Lambda
    # 3. Call fails, leading to sending the 500 error back.

    authentication succeeds:
      desc: The sidecar is able to obtain the necessary authentication, and is passing this
       to Mashery gateway for applcation.

      point: pre-processor

      client:
        remote address: 127.0.0.1
        http verb: GET
        uri: https://api.airfranceklm.com/externallyHostedAPI/fff?myQuery=123

        # RequestPayload can be for GET-type requests.

      key:
        package key: dfgf
        application:
          name: the-app

      request to the api provider:
        provider uri: https://some.externally.hostted.backend.com/backend/fff?myQuery=123

        # This is what should be sent to lambda

      sidecar:
        input:
          synchronicity: RequestResponse
          point: PreProcessor
          packageKey: dfgf
          serviceId: aServiceId
          endpointId: anEndpointId

        output:
          addHeaders:
            x-authz: akdsfaihvkmnadflknen43o5kn5
            x-bnd-scope: v,346,f

      # This is what needs to be changed
      expect api origin request modifications:
        added headers:
          x-authz: akdsfaihvkmnadflknen43o5kn5
          x-bnd-scope: v,346,f

    authentication fails:
      desc: The sidecar denies the authentication for the specific request.

      point: pre-processor

      client:
        remote address: 127.0.0.1
        http verb: GET
        uri: https://api.airfranceklm.com/externallyHostedAPI/fff?myQuery=123

        # RequestPayload can be for GET-type requests.

      key:
        package key: dfgf
        application:
          name: the-app

      request to the api provider:
        provider uri: https://some.externally.hostted.backend.com/backend/fff?myQuery=123

        # This is what should be sent to lambda

      sidecar:
        input:
          synchronicity: RequestResponse
          point: PreProcessor
          packageKey: dfgf
          serviceId: aServiceId
          endpointId: anEndpointId

        output:
          code: 403
          message: This application cannot access this service.

      expect traffic manager:
        set complete: true
        status code: 403
        headers:
          content-type: application/xml
        body: "<h1><![CDATA[This application cannot access this service.]]></h1>"

    invocation fails:
      desc: The sidecar denies the authentication for the specific request.

      point: pre-processor

      client:
        remote address: 127.0.0.1
        http verb: GET
        uri: https://api.airfranceklm.com/externallyHostedAPI/fff?myQuery=123

        # RequestPayload can be for GET-type requests.

      key:
        package key: dfgf
        application:
          name: the-app

      request to the api provider:
        provider uri: https://some.externally.hostted.backend.com/backend/fff?myQuery=123

        # This is what should be sent to lambda

      sidecar:
        input:
          synchronicity: RequestResponse
          point: PreProcessor
          packageKey: dfgf
          serviceId: aServiceId
          endpointId: anEndpointId

        throw error: Unexpected coded 500 encountered

      expect traffic manager:
        set complete: true
        status code: 500
        headers:
          content-type: application/xml
        body: "<h1><![CDATA[Internal server error before processing the call, code 0x000003BB]]></h1>"